--DDL DE PADRRE
CREATE TABLE PADRE(
   ID_PADRE NUMBER,
   NOMBRE NVARCHAR2(100),
   APELLIDO VARCHAR2(100),
   EDAD NUMBER,
   TRABAJO VARCHAR2(100),
   CONSTRAINT PADRE_PK PRIMARY KEY(ID_PADRE)
);
DROP TABLE PADRE;
INSERT INTO PADRE VALUES(1, 'BRAULIO', 'GRAJALES', 65, 'DOCENTE');
INSERT INTO PADRE VALUES(2, 'RICARDO', 'MORALES', 0, 'NULL');
INSERT INTO PADRE VALUES(3, 'URIEL', 'MARTINEZ', 32, 'ABOGADO');
INSERT INTO PADRE VALUES(4, 'PAMELA', 'SANCHEZ', 32, 'REPORTERA');

INSERT INTO PADRE VALUES (5, 'EMILY', 'GOMEZ', 26, 'CONTADORA');
INSERT INTO PADRE VALUES (6, 'CESAR', 'CARRILLO', 35, 'DOCTOR');

INSERT INTO PADRE VALUES (7,'JOEL','GRAHAM',45 ,'CONTADOR');

INSERT INTO PADRE VALUES (8,'RICHAR','LOREZ',35 ,'CHEF');
INSERT INTO PADRE VALUES(9, 'ELENA', 'ROSAS', 30, 'CAPTURISTA');
INSERT INTO PADRE VALUES(10, 'MIGUEL', 'SANCHEZ', 25, 'PROMOTOR');
INSERT INTO PADRE VALUES(11, 'ELENA', 'ROSAS', 30, 'CAPTURISTA');
INSERT INTO PADRE VALUES(12, 'MIGUEL', 'SANCHEZ', 25, 'PROMOTOR');
COMMIT;
SELECT * FROM PADRE; 

CREATE TABLE HIJO(
   ID_HIJO NUMBER,
   NOMBRE NVARCHAR2(100),
   APELLIDO VARCHAR2(100),
   EDAD NUMBER,
   HOBBIE VARCHAR2(100),
   PADRE_ID NUMBER,
   CONSTRAINT HIJO_PK PRIMARY KEY(ID_HIJO),
   CONSTRAINT PADRE_FK FOREIGN KEY(PADRE_ID) REFERENCES PADRE(ID_PADRE)
 --CONSTRAINT ES UNA PALABRA RESERVADA + NOMBRE DEL CONSTRAINT(UNICO), TIPO DE CONSTRAINT + 
 --CAMPO QUE SERA LA CLAVE FORANEA + REFERENCES + NOMBRE DE LA TABLA YEL NOMBRE DEL CAMPO QUE SE HACE REFERENCIA PARA RELACIONAR CONLA TABLA PADRE 
);
INSERT INTO HIJO VALUES(1, 'MIRANDA', 'GRAJALES', 27, 'LEER NOVELAS', 1);
INSERT INTO HIJO VALUES(2, 'DAVID', 'HERNANDEZ', 7, 'JUGAR A LAS ESCONDIDAS', NULL);
INSERT INTO HIJO VALUES(3, 'ALONDRA', 'MARTINEZ', 17, 'VER SERIES', 3);
INSERT INTO HIJO VALUES(4, 'ROBERTO', 'SANCHEZ', 7, 'JUGAR VIDEOJUEGOS', 4);
INSERT INTO HIJO VALUES(5,'MARK','GRAJAM',26,'ENTRENAR',7);
INSERT INTO HIJO VALUES(6,'OLIVER','HERNANDEZ',6,'JUGAR CON SOLDADOS',NULL);
INSERT INTO HIJO VALUES (7, 'CAMILA', 'PEREZ', '77', 'CANTAR', 3);
INSERT INTO HIJO VALUES (8, 'SANSA', 'STARK', '25', 'ROBAR TRONOS', 4);
INSERT INTO HIJO VALUES(9, 'YUNUEN','ROJAS',22, 'GUSTA DE BEBER PIÑAS COLADAS',11);
INSERT INTO HIJO VALUES(10,'DARIEN ', 'ROJAS',4, 'LEER CUENTOS',4);
INSERT INTO HIJO VALUES(11, 'MARIO', 'GALLEGOS', 19, 'JUGAR VIDEOJUEGOS', 3);
INSERT INTO HIJO VALUES(12, 'GABY', 'MARTINEZ', 15, 'MAQUILLARSE', 2);
COMMIT;
SELECT * FROM HIJO;



--USO DEL INNER JOIN  -- DEVUELVE LOS REGISTROS QUE TIENEN VALORES COINCIDENTES EN AMBAS TABLAS
SELECT * FROM HIJO H
INNER JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE;

--USO DEL LEFT JOIN --DEVUELVE TODOS LOS REGISTROS DE LA TABLA IZQUIERDA(HIJO)
 --Y LOS REGISTROS COINCIDENTES DE LA TABLA DERECHA(PADRE)
SELECT * FROM HIJO H
LEFT JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE;


--USO DEL LEFT JOIN QUITANDO COINCIDENCIAS
SELECT * FROM HIJO H
LEFT JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE
WHERE H.PADRE_ID IS NULL;


--USO DEL RIGHT JOIN --DEVUELVE TODOS LOS REGISTROS DE LA TABLA DERECHA(PADRE)
 --Y LOS REGISTROS COINCIDENTES CON LA TABLA IZQYUIERDA(HIJO)
 SELECT * FROM HIJO H
 RIGHT JOIN PADRE P
 ON H.PADRE_ID = P.ID_PADRE;
 
--USO DEL RIGHT JOIN SIN COINCIDENCIAS
SELECT * FROM HIJO H
RIGHT JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE
WHERE  H.PADRE_ID IS NULL;

-- USO DEL FULL JOIN --DEVUELVE TODOS LOS REGISTROS DE AMBAS TABLAS Y SUS COINCIDENCIAS
SELECT * FROM HIJO H
FULL JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE;

-- USO DEL JOIN FULL JOIN SIN COINCIDENCIAS
SELECT * FROM HIJO H
FULL JOIN PADRE P
ON H.PADRE_ID = P.ID_PADRE
WHERE  H.PADRE_ID IS NULL;

--REPLICAR EL EJERCICIO PARA APLICAR USO DE LOS JOIN

CREATE TABLE LIBROSS(
   ID_LIBRO NUMBER,
   NOMBRE NVARCHAR2(100),
   AUTOR VARCHAR2(100),
   HOJAS NUMBER,
   GENERO VARCHAR2(100),
   CONSTRAINT LIBROSS_PK PRIMARY KEY(ID_LIBRO)
);
INSERT INTO LIBROSS VALUES(1, 'EL ESCLAVO', 'ALFONZO', 150, 'REAL LIFE');
INSERT INTO LIBROSS VALUES(2, 'FLORES EN EL ATICO','VC.ANDREWS', 600, 'NULL');
INSERT INTO LIBROSS VALUES(3, '3 MSC', 'RENATA', 342, 'REAL LIFE');
INSERT INTO LIBROSS VALUES(4, 'IT','STEPHEN KING', 700, 'TERROR');
INSERT INTO LIBROSS VALUES(5, 'AVES EMPLUMADAS', 'JORGE', 92, 'NULL');
INSERT INTO LIBROSS VALUES(6, 'OLVIDA EL MAÑANA','LAURA', 430, 'MISTERIO');
COMMIT;
SELECT * FROM LIBROSS;

CREATE TABLE PELICULA(
   ID_PELICULA NUMBER,
   NOMBRE NVARCHAR2(100),
   DIRECTOR VARCHAR2(100),
   MINUTOS NUMBER,
   DESCRP VARCHAR2(100),
   LIBRO_ID NUMBER,
   CONSTRAINT PELICULA_PK PRIMARY KEY(ID_PELICULA),
   CONSTRAINT PELICULA_FK FOREIGN KEY(LIBRO_ID) REFERENCES LIBRO(ID_LIBRO)
);
INSERT INTO PELICULA VALUES(1, 'LIBERTA', 'GARCES', 90, 'UN ATARDECER LIBRE', NULL);
INSERT INTO PELICULA VALUES(2, '3 MSC2','MARCOS', 120, 'ADOLECENTES REBELDES',3);
INSERT INTO PELICULA VALUES(3, 'RENACIDO', 'IÑARITU', 150, 'SOBREBIBIR ', NULL);
INSERT INTO PELICULA VALUES(4, 'IT','GUILLERMO', 120, 'TERROR', 4);
INSERT INTO PELICULA VALUES(5, 'CADENAS', 'DIAMOSN', 65, 'LOGRA ESCAPAR', 1);
INSERT INTO PELICULA VALUES(6, 'OSOS','FOX', 120, 'DOCUMENTAL', NULL);
COMMIT;
SELECT * FROM PELICULA;
--DROP table PELICULA;

--USO DEL INNER JOIN  -- DEVUELVE LOS REGISTROS QUE TIENEN VALORES COINCIDENTES EN AMBAS TABLAS
SELECT * FROM PELICULA P
INNER JOIN LIBROSS L
ON P.LIBRO_ID = L.ID_LIBRO;

--USO DEL LEFT JOIN --DEVUELVE TODOS LOS REGISTROS DE LA TABLA IZQUIERDA(HIJO)
 --Y LOS REGISTROS COINCIDENTES DE LA TABLA DERECHA(PADRE)
SELECT * FROM PELICULA P
LEFT JOIN LIBROSS L
ON P.LIBRO_ID = L.ID_LIBRO;
--USO DEL LEFT JOIN QUITANDO COINCIDENCIAS
SELECT * FROM PELICULA P
LEFT JOIN LIBROSS L
ON P.LIBRO_ID = L.ID_LIBRO
WHERE P.LIBRO_ID IS NULL;

--USO DEL RIGHT JOIN --DEVUELVE TODOS LOS REGISTROS DE LA TABLA DERECHA(PADRE)
 --Y LOS REGISTROS COINCIDENTES CON LA TABLA IZQYUIERDA(HIJO)
 SELECT * FROM PELICULA P
 RIGHT JOIN LIBROSS L
 ON P.LIBRO_ID = L.ID_LIBRO;
--USO DEL RIGHT JOIN SIN COINCIDENCIAS
SELECT * FROM PELICULA P
RIGHT JOIN LIBROSS L
ON P.LIBRO_ID = L.ID_LIBRO
WHERE  P.LIBRO_ID IS NULL;

-- USO DEL FULL JOIN --DEVUELVE TODOS LOS REGISTROS DE AMBAS TABLAS Y SUS COINCIDENCIAS
SELECT * FROM PELICULA P
FULL JOIN LIBROSS L
ON P.LIBRO_ID = L.ID_LIBRO;
-- USO DEL JOIN FULL JOIN SIN COINCIDENCIAS
SELECT * FROM PELICULA P
FULL JOIN LIBROSS L
ON P.LIBRO_ID = L.ID_LIBRO
WHERE  P.LIBRO_ID IS NULL;
