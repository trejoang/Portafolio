-- CREAR UN DDL PARA LA TABLA MATERIA
CREATE TABLE MATERIA(
  ID_MATERIA NUMBER,
  NOMBRE NVARCHAR2(100),
  NIVEL NUMBER,
  CREDITOS NUMBER,
  DOCENTES NUMBER, -- 1 JESUS,  -2 MARIANA, 3-DANIEL, 4-ALAN, 5- ARMANDO, 6-JOSUE
  CONSTRAINT MATERIA_PK PRIMARY KEY(ID_MATERIA)
);
INSERT INTO MATERIA VALUES(1,'ANATOMIA', 2,25,3);
INSERT INTO MATERIA VALUES(2,'MATEMATICAS DISCRETAS', 1,30,1);
INSERT INTO MATERIA VALUES(3,'INGLES', 3,10,4);
INSERT INTO MATERIA VALUES(4,'PROGRAMACION', 1,30,6);
INSERT INTO MATERIA VALUES (5,'REDES EMERGENTES',7,25,4);
INSERT INTO MATERIA VALUES (6,'DESARROLLO DE EMPRENDEDORES',5,15,1);
INSERT INTO MATERIA VALUES (7, 'ALGEBRA', 5, 50, 6);
INSERT INTO MATERIA VALUES (8, 'DEPORTES', 7, 10, 1);
INSERT INTO MATERIA VALUES(9, 'INGLES', 4, 35, 4);
INSERT INTO MATERIA VALUES(10, 'DESARROLLO MOVIL', 5, 37, 2);
INSERT INTO MATERIA VALUES(11, 'FISICA II',3 ,27,2);
INSERT INTO MATERIA VALUES(12, 'CALCULO INFERENCIAL',2 ,26,3);
COMMIT;
SELECT * FROM MATERIA;
CREATE TABLE ALUMNO(
  ID_ALUMNO NUMBER,
  NOMBRE NVARCHAR2(100),
  APELLIDO NVARCHAR2(100),
  EDAD NUMBER,
  CARRERA NUMBER, -- 1 SISTEMAS,  -2 INFORMATICA, 3-MEDICINA, 4-DERECHO
  MATERIA_ID NUMBER,
  CONSTRAINT ALUMNO_PK PRIMARY KEY(ID_ALUMNO),
  CONSTRAINT MATERIA_FK FOREIGN KEY(MATERIA_ID) REFERENCES MATERIA(ID_MATERIA)
); 

INSERT INTO ALUMNO VALUES(1, 'JOSE', 'MARTINEZ', 27, 2, 2);
INSERT INTO ALUMNO VALUES(2, 'ROBERTO', 'JIMINEZ', 22, 0, NULL);
INSERT INTO ALUMNO VALUES(3, 'JUAN', 'RAMIREZ', 25, 4, NULL);
INSERT INTO ALUMNO VALUES(4, 'ELENA', 'ALCANTARA', 25, 1, 1);
INSERT INTO ALUMNO VALUES(5,'DANTE','HERRERA',25,3,1);
INSERT INTO ALUMNO VALUES(6,'ELLIE','CARMONA',21,2,3);
INSERT INTO ALUMNO VALUES (7, 'CARLOS', 'CONTRERAS', 15, 4, 2);
INSERT INTO ALUMNO VALUES (8, 'PANCHO', 'IBARRA', 22, 4, 1);
INSERT INTO ALUMNO VALUES(9, 'LEONARDO', 'ROSAS', 25, 1, 3);
INSERT INTO ALUMNO VALUES(10, 'VICTOR', 'VAZQUEZ', 22, 4, 1);
INSERT INTO ALUMNO VALUES(11, 'MACARIO', 'MARTINEZ', 22, 2, 2);
INSERT INTO ALUMNO VALUES(12, 'MAURO', 'JIMINEZ', 24, 3, 3);
COMMIT;
SELECT * FROM ALUMNO;
                 -- REALIZAR LO SIGUIENTE
  --1- MOSTRAR LOS REGISTROS DEL ALUMNO CON SUS MATERIAS Y CASE PARA DOCENTE Y CARRERA
SELECT A.ID_ALUMNO,A.NOMBRE,A.APELLIDO, A.EDAD,
(
   CASE A.CARRERA
   WHEN 1 THEN 'SISTEMAS'
   WHEN 2 THEN 'INFORMATICA'
   WHEN 3 THEN 'MEDICINA'
   WHEN 4 THEN 'DERECHO'
   ELSE 'SIN CARRERA'
   END
)AS CARRERA, A.MATERIA_ID, 
  ( CASE M.DOCENTES
   WHEN 1 THEN 'JESUS'
   WHEN 2 THEN 'MARIANA'
   WHEN 3 THEN 'DANIEL'
   WHEN 4 THEN 'ALAN'
   WHEN 5 THEN 'ARMANDO'
   WHEN 6 THEN 'JOSUE'
   ELSE 'SIN DOCENTE'
   END)AS DECENTE FROM ALUMNO A LEFT JOIN MATERIA M ON A.MATERIA_ID = M.ID_MATERIA; 
   
  --2- CONTAR CUANTOS ALUMNOS TENGO POR CARRERA
  SELECT (
   CASE A.CARRERA
   WHEN 1 THEN 'SISTEMAS'
   WHEN 2 THEN 'INFORMATICA'
   WHEN 3 THEN 'MEDICINA'
   WHEN 4 THEN 'DERECHO'
   ELSE 'SIN CARRERA'
   END
)AS CARRERA, COUNT(ID_ALUMNO)AS ALUMNO FROM ALUMNO A GROUP BY A.CARRERA;
  
  --3- MOSTRAR LAS MATERIAS CON MAYOR NUMERO DE CREDITOS Y AGREGAR LA PALABRA "CREDITOS" EN EL RESULTADO
  SELECT NOMBRE,CREDITOS ||' CREDITOS' FROM MATERIA;
  
  ------NOOO
  --4- MOSTRAR AL DOCENTE QUE IMPARTE MAS MATERIAS QUE LOS DEMAS
  SELECT ( CASE DOCENTES
  WHEN 1 THEN 'JESUS'
   WHEN 2 THEN 'MARIANA'
   WHEN 3 THEN 'DANIEL'
   WHEN 4 THEN 'ALAN'
   WHEN 5 THEN 'ARMANDO'
   WHEN 6 THEN 'JOSUE'
   ELSE 'SIN DOCENTE'
   END )AS DOCENTES, COUNT(*)AS MATERIAS
  FROM MATERIA  GROUP BY DOCENTES HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM MATERIA GROUP BY DOCENTES);
------------
  --5- MOSTRAR EL DOCENTE Y EL NUMERO DE MATERIAS IMPARTIDAS 
  SELECT ( CASE DOCENTES
  WHEN 1 THEN 'JESUS'
   WHEN 2 THEN 'MARIANA'
   WHEN 3 THEN 'DANIEL'
   WHEN 4 THEN 'ALAN'
   WHEN 5 THEN 'ARMANDO'
   WHEN 6 THEN 'JOSUE'
   ELSE 'SIN DOCENTE'
   END )AS DECENTES, COUNT(NOMBRE)AS MATERIAS FROM MATERIA  GROUP BY DOCENTES;
   
  --6- ORDENAR LAS MATERIAS POR SU NOMBRE Y POR CREDITOS
  SELECT NOMBRE,CREDITOS FROM MATERIA ORDER BY NOMBRE ASC;
  
  --7- ORDENAR A LOS ALUMNOS POR SU APELLIDO Y POR EDAD
  SELECT APELLIDO, EDAD FROM ALUMNO ORDER BY APELLIDO ASC;
  
  --8- MOSTRAR EL TOTAL DE CREDITOS POR ALUMNO DE ACUERO A LAS MATERIAS QUE TOMARA
  SELECT A.NOMBRE, M.CREDITOS FROM ALUMNO A LEFT JOIN MATERIA M ON A.MATERIA_ID = M.ID_MATERIA WHERE M.ID_MATERIA IS NOT NULL;
  
  ---- NOOO
  --9-MOSTRAR EL ALUMNO CON MAYOR CANTIDAD DE CREDITOS POR TOMAR
  SELECT A.NOMBRE, MAX(M.CREDITOS)AS CRESDITOS FROM ALUMNO A RIGHT JOIN MATERIA M ON A.MATERIA_ID = M.ID_MATERIA 
  ORDER BY M.CREDITOS DESC GROUP BY A.NOMBRE ;
  
  SELECT A.NOMBRE, M.CREDITOS FROM ALUMNO A LEFT JOIN MATERIA M ON A.MATERIA_ID = M.ID_MATERIA WHERE M.ID_MATERIA IS NOT NULL
ORDER BY M.CREDITOS DESC FETCH FIRST 1 ROWS ONLY;
  ----FROM MATERIA  GROUP BY DOCENTES HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM MATERIA GROUP BY DOCENTES);
  --10- MOSTRAR LOS ALUMNOS QUE NO TIENEN MATERIAS ASIGNADAS Y SI CASE PARA CARRERA
  SELECT ID_ALUMNO,NOMBRE,APELLIDO,EDAD,(
   CASE CARRERA
   WHEN 1 THEN 'SISTEMAS'
   WHEN 2 THEN 'INFORMATICA'
   WHEN 3 THEN 'MEDICINA'
   WHEN 4 THEN 'DERECHO'
   ELSE 'SIN CARRERA'
   END
)AS CARRERA, MATERIA_ID FROM ALUMNO WHERE MATERIA_ID IS NULL;
  
  --11- MOSTRAR LAS MATERIAS QUE NO ESTAN SIENO IMPARTIDAS Y SU CASE PARA DOCENTE
  SELECT ID_MATERIA, NOMBRE, NIVEL, CREDITOS, 
  ( CASE DOCENTES
  WHEN 1 THEN 'JESUS'
  WHEN 2 THEN 'MARIANA'
  WHEN 3 THEN 'DANIEL'
  WHEN 4 THEN 'ALAN'
  WHEN 5 THEN 'ARMANDO'
  WHEN 6 THEN 'JOSUE'
  ELSE 'SIN DOCENTE'
  END)AS DOCENTE FROM MATERIA WHERE DOCENTES IS NULL;
  --12- MOSTRAR EL DETALLE DEL ALUMNO Y LOS DATOS DE LA MATERIA QUE TOMARA CON SU CASE CORRESPONDIENTE (CONCAT O ||)
  SELECT * FROM ALUMNO;
  SELECT * FROM MATERIA;
  
  SELECT 'EL ID: '||A.ID_ALUMNO||' PERTENECE A: '||A.NOMBRE||'-'||' Y TIENE: '||A.EDAD||' ESTUDIA: '||
  ( CASE A.CARRERA WHEN 1 THEN 'SISTEMAS' WHEN 2 THEN 'INFORMATICA' WHEN 3 THEN 'MEDICINA' WHEN 4 THEN 'DERECHO' ELSE 'SIN CARRERA' END )
  ||' Y MATERIA: '||A.MATERIA_ID||' - ID MATERIA '||M.ID_MATERIA||' CON NOMBRE: '||M.NOMBRE||' DE NIVEL: '||M.NIVEL||' NU_CREDITOS: '||M.CREDITOS||' PROFESOR: '||
( CASE M.DOCENTES WHEN 1 THEN 'JESUS'  WHEN 2 THEN 'MARIANA'  WHEN 3 THEN 'DANIEL'  WHEN 4 THEN 'ALAN'  WHEN 5 THEN 'ARMANDO'  WHEN 6 THEN 'JOSUE' ELSE 'SIN DOCENTE' END )
  FROM ALUMNO A FULL JOIN MATERIA M ON A.MATERIA_ID = M.ID_MATERIA;


