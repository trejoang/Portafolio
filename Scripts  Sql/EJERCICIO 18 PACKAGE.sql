--CREACION DE PACKAGE
--DELCARA EL PAQUETE O PACKAGE

CREATE OR REPLACE PACKAGE PKG_GENERAL AS
   FUNCTION FN_NUMERO_PAR(P_NUMERO IN NUMBER) RETURN NVARCHAR2;
   PROCEDURE PR_DETALLE_LIBRO;
   END PKG_GENERAL;
   /
 /*  
CREATE OR REPLACE PACKAGE BODY PKG_GENERAL AS
        --REFERENCIAMOS LA FUNCION Y EL CURSOR
        FUNCTION FN_NUMERO_PAR(P_NUMERO IN NUMBER) RETURN NVARCHAR2 IS
BEGIN 
     RETURN CASE WHEN MOD(P_NUMERO, 2) = 0 THEN 'PAR' ELSE 'IMPAR' END;
END FN_NUMERO_PAR;
END PKG_GENERAL;
/
--BODY DEL PACKAGE
--- ESTA FORMA DEBERIA SER POSIBLE DE USAR EN CUALQUIER OTRO LENGUAJE SQL
--PARA PODER ACCEDER LAS FUNCIONES, PRECEDIMIENTOS ETC.. DENTRO DE UN PACKAGE
CREATE OR REPLACE PACKAGE BODY PKG_GENERAL AS
FUNCTION FN_NUMERO_PAR(P_NUMERO IN NUMBER) RETURN NVARCHAR2
  IS EXTERNAL NAME 'FN_NUMERO_PAR';
  
  PROCEDURE PR_DETALLE_LIBRO;
  IS EXTERNAL NAME 'PR_DETALLE_LIBRO';
END PKG_GENERAL;
/
*/
---
----- BODY
-- AL PARACER POR PARTE DE ORACLE NO SE PUEDE ACCEDER DIRECTAMENTE A FUNCIONES,PROCESOS, ETC..
-- POR LO TANTO ES NECESARIO EL DECLARAR TODO LO QUE SE DESEE TENER O EJECUTAR DENTRO DEL PACKAGE 
--PARA PODER USARLO Y ACCEDER A EL 
CREATE OR REPLACE PACKAGE BODY PKG_GENERAL AS
-- FUNCION 
FUNCTION FN_NUMERO_PAR(P_NUMERO IN NUMBER)
RETURN NVARCHAR2
IS
LV_RESULTADO NVARCHAR2(100);
BEGIN
  --INSTRUCIONES
  --EL PARAMETRO ES DIVISIBLE ENTRE 2
  IF MOD(P_NUMERO, 2) =0 THEN
    LV_RESULTADO := 'EL RESULTADO: '|| P_NUMERO || ' ES PAR';
    
  ELSE 
    LV_RESULTADO :='EL NUMERO: '|| P_NUMERO || ' NO ES PAR';
  END IF;
  RETURN LV_RESULTADO;
  END FN_NUMERO_PAR;
----- PROCEDURE
PROCEDURE PR_DETALLE_LIBRO
IS
     CURSOR LIBRO_INFO IS
        SELECT NOMBRE,
          (
            CASE GENERO
              WHEN 1 THEN 'DRAMA' WHEN 2 THEN 'TERROR'
              WHEN 3 THEN 'CIENCIA FICCIONE' WHEN 4 THEN 'NOVELA'
              WHEN 5 THEN 'THRILLER'  WHEN 6 THEN 'COMEDIA'
              ELSE 'SIN GENERO'
          END
        )AS GENERO, PRECIO FROM LIBRO;
        --VARIABLES LOCALES
        LV_NOMBRE LIBRO.NOMBRE%TYPE;
        LV_GENERO NVARCHAR2(100);
        LV_PRECIO NUMBER;
    BEGIN
    OPEN LIBRO_INFO;
    --RECUPERAR EL CURSOR Y MOSTRAR LOS DATOS
    LOOP
      --POR CADA FILA RECORIDA SE TOMARAN LOS DATOS DEL CURSOR
      FETCH LIBRO_INFO INTO LV_NOMBRE, LV_GENERO, LV_PRECIO;
      --CONDICION PARA SALIR CUANDO EL CURSOR YA NO TENGA REGISTROS
      EXIT WHEN LIBRO_INFO%NOTFOUND;
      --MOSTRAR LOS DATOS DEL CURSOR
      DBMS_OUTPUT.PUT_LINE('NOMBRE DEL LIBRO: '||LV_NOMBRE||', GENERO: '||LV_GENERO||', PRECIO: '||LV_PRECIO);
      END LOOP;
    --CERRAR EL CURSOR
    CLOSE LIBRO_INFO;
END PR_DETALLE_LIBRO;
END PKG_GENERAL;
/
------
/*
SELECT OBJECT_NAME, OBJECT_TYPE, STATUS
FROM USER USER_OBJECTS
WHERE OBJECT_NAME IN ('FN_NUMERO_PAR','PR_DETALLE_LIBRO','PKG_GENERAL');
*/
BEGIN 
   PKG_GENERAL.PR_DETALLE_LIBRO;
END;
/