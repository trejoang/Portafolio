--TRIGGER MULTIPLES
--DESATIVAR LOS TRIGGERS(DISPARADORES) SIMPLES
--VIA DESDE CONEXION O CON SENTENCIAS
--DESATIVAR
--ALTER TRIGGER TR_U_COMPUTADORA DISABLE;
--ACTIVAR 
--ALTER TRIGGER TR_U_COMPUTADORA ENABLE;

--TRIGGER MULTIPLE

CREATE OR REPLACE TRIGGER TR_MULTIPLE_COMPUTADORA
AFTER INSERT OR UPDATE OR DELETE ON COMPUTADORA
FOR EACH ROW
DECLARE
LV_ID_BIT NUMBER;
LV_USUARIO NVARCHAR2(100);
LV_FECHA DATE;
  BEGIN
    --RECUPERAR EL ID VALIDO USANSO SECUENCIAS
    SELECT S_ID_BIT_COMPU.NEXTVAL,USER, SYSDATE INTO LV_ID_BIT, LV_USUARIO, LV_FECHA FROM DUAL;
    
    --USO DE IF
    IF INSERTING THEN
       INSERT INTO BIT_COMPUTADORA(ID_BIT, ID_COMPU, MARCA, MODELO, RAM, PROCESADOR, PRECIO,
       MARCA_OLD, MODELO_OLD, RAM_OLD, PROCESADOR_OLD, PRECIO_OLD, USUARIO, FECHA_MOV, MOVIMIENTO)
       VALUES(LV_ID_BIT, :NEW.ID_COMPU, :NEW.MARCA, :NEW.MODELO, :NEW.RAM, :NEW.PROCESADOR, :NEW.PRECIO, NULL, NULL, 0, NULL,0, 
       LV_USUARIO, LV_FECHA, 'INSERT');
    
    ELSIF UPDATING THEN
       INSERT INTO BIT_COMPUTADORA(ID_BIT, ID_COMPU, MARCA, MODELO, RAM, PROCESADOR, PRECIO,
       MARCA_OLD, MODELO_OLD, RAM_OLD, PROCESADOR_OLD, PRECIO_OLD, USUARIO, FECHA_MOV, MOVIMIENTO)
       VALUES(LV_ID_BIT, :NEW.ID_COMPU, :NEW.MARCA, :NEW.MODELO, :NEW.RAM, :NEW.PROCESADOR, :NEW.PRECIO, :OLD.MARCA, :OLD.MODELO, :OLD.RAM, :OLD.PROCESADOR,
       :OLD.PRECIO, LV_USUARIO, LV_FECHA, 'UPDATE');
       
    ELSIF DELETING THEN
      INSERT INTO BIT_COMPUTADORA(ID_BIT, ID_COMPU, MARCA, MODELO, RAM, PROCESADOR ,PRECIO,
       MARCA_OLD, MODELO_OLD, RAM_OLD, PROCESADOR_OLD, PRECIO_OLD, USUARIO, FECHA_MOV, MOVIMIENTO)
       VALUES(LV_ID_BIT, :OLD.ID_COMPU, NULL, NULL, 0, NULL, 0, :OLD.MARCA, :OLD.MODELO, :OLD.RAM, :OLD.PROCESADOR,
       :OLD.PRECIO, LV_USUARIO, LV_FECHA, 'DELETE');
    END IF;
   END TR_MULTIPLE_COMPUTADORA;
/

--CREAR UNA ENTIDA CON TRIGGER MULTIPLE CON LA TABLA BITACORA
       